// <auto-generated />
using System;
using Hydra.Module.Video.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hydra.Server.Auth.Migrations
{
    [DbContext(typeof(VideoDbContext))]
    partial class VideoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.PlaylistToGroup", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaylistId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("PlaylistToGroup");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.UserToGroup", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserToGroup");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VideoClasses");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VideoClassId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VideoClassId");

                    b.ToTable("VideoGroups");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoToPlaylist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaylistId", "VideoId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoToPlaylist");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.PlaylistToGroup", b =>
                {
                    b.HasOne("Hydra.Module.Video.Backend.Data.VideoGroup", "Group")
                        .WithMany("Playlists")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hydra.Module.Video.Backend.Data.Playlist", "Playlist")
                        .WithMany("VideoGroups")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.UserToGroup", b =>
                {
                    b.HasOne("Hydra.Module.Video.Backend.Data.VideoGroup", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoGroup", b =>
                {
                    b.HasOne("Hydra.Module.Video.Backend.Data.VideoClass", "VideoClass")
                        .WithMany("VideoGroups")
                        .HasForeignKey("VideoClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoClass");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoToPlaylist", b =>
                {
                    b.HasOne("Hydra.Module.Video.Backend.Data.Playlist", "Playlist")
                        .WithMany("Videos")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hydra.Module.Video.Backend.Data.Video", "Video")
                        .WithMany("Playlists")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.Playlist", b =>
                {
                    b.Navigation("VideoGroups");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.Video", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoClass", b =>
                {
                    b.Navigation("VideoGroups");
                });

            modelBuilder.Entity("Hydra.Module.Video.Backend.Data.VideoGroup", b =>
                {
                    b.Navigation("Playlists");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
