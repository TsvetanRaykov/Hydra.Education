@inject IUserService _userService

<Modal @ref="_modalRef">
    <ModalContent Centered="true" Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>Reset password for @_user.FullName</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <UserPassword @ref="_password"></UserPassword>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@OnSubmit">Set password</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {

    [Parameter]
    public EventCallback<string> OnPasswordUpdated { get; set; }

    private Modal _modalRef;
    private ApplicationUser _user = new();
    private UserPassword _password;

    public void ShowModal(ApplicationUser user)
    {
        _user = user;
        _password.Clear();
        _modalRef.Show();
    }

    private void HideModal()
    {
        _user = new ApplicationUser();
        _modalRef.Hide();
    }

    private async Task OnSubmit()
    {
        if (_password.Validate())
        {
            var result = await _userService.SetPasswordAsync(_user, _password.Password);
            HideModal();
            await OnPasswordUpdated.InvokeAsync(result);
        }
    }

}