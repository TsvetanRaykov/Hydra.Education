@page "/PlaylistCreate"

@inject IPlaylistService _playlistService
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider

<ManageComponent ManagedItem="_playlist" @ref="_manageComponent">
    <Div Class="align-items-baseline d-flex flex-column h-100 justify-content-between">
        <h5>Create a new playlist to group videos within.</h5>
        <Button Color="Color.Primary" Clicked="@CreatePlaylist">Create</Button>
    </Div>
</ManageComponent>
<Div Class="d-flex flex-wrap">
    @if (_playlists != null)
    {
        foreach (var playlist in _playlists)
        {
            <Div Class="m-4">
                <Button Type="@ButtonType.Link" To="@($"Playlist/{playlist.Id}")">
                    <PlaylistCard Playlist="playlist" />
                </Button>
            </Div>
        }
    }

</Div>

@code {

    private readonly VideoPlaylist _playlist = new();

    private ManageComponent _manageComponent;

    private IEnumerable<VideoPlaylist> _playlists;

    protected override async Task OnInitializedAsync()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        _playlists = await _playlistService.GetPlayListsAsync(authState.User.Identity?.Name);

    }

    private async Task CreatePlaylist()
    {

        if (_manageComponent.Validate())
        {

            if (await _playlistService.CreatePlaylistAsync(_playlist))
            {
                _navigationManager.NavigateTo("/Video");
            }
        }
    }


}