@page "/GroupCreate/{classId}"

@using Hydra.Module.Video.Contracts
@using Microsoft.Extensions.Configuration

@inject IConfiguration _configuration
@inject NavigationManager _navigationManager
@inject IClassService _classService
@inject IGroupService _groupService

<hr />
@if (_videoClass == null)
{
    <HydraLoader />
}
else
{
    <Div>
        <Div Class="d-flex">

            <Tooltip Text="Edit that class" Placement="TooltipPlacement.RightStart" Class="mr-4">
                <Button Type="@ButtonType.Link" To="@($"Class/{_videoClass.Id}")">
                    <Div Class="hydra-card">
                        <Image Source="@_imageUrl"></Image>
                    </Div>
                </Button>
            </Tooltip>
            <Div Class="flex-grow-1">
                <blockquote class="blockquote">
                    <p class="mb-0">@_videoClass.Name</p>
                    <footer class="blockquote-footer"><cite>@_videoClass.Description</cite></footer>
                </blockquote>
            </Div>

        </Div>
        <Div>
            <ManageComponent ManagedItem="@_videoGroup" @ref="_managedComponent">
                <Div Class="align-items-baseline d-flex flex-column h-100 justify-content-between">

                    <h5>Add a new group to @_videoClass.Name</h5>
                    <Button Color="Color.Primary" Clicked="@CreateGroup">Create</Button>
                </Div>
            </ManageComponent>
        </Div>
    </Div>

}
@code {

    [Parameter]
    public string ClassId { get; set; }

    private VideoGroup _videoGroup;
    private ManageComponent _managedComponent;

    private VideoClass _videoClass;
    private string _imageUrl;

    protected override async Task OnInitializedAsync()
    {
        _videoClass = await _classService.GetClassAsync(ClassId);
        _videoGroup = new VideoGroup
        {
            ClassId = _videoClass.Id
        };
        _imageUrl = $"{_configuration["ApiBaseUrl"]}{_videoClass.ImageUrl}";
    }

    private async Task CreateGroup()
    {
        if (_managedComponent.Validate())
        {
            //_videoGroup.Image = FileChunk.Data;

            if (await _groupService.CreateGroupAsync(_videoGroup))
            {
                _navigationManager.NavigateTo($"/Video/Class/{_videoClass.Id}");
            }
        }
    }

}